apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.giacomoparisi.funktionalkit'

androidExtensions {
    experimental = true
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

android {
    compileSdkVersion Config.compile_sdk

    defaultConfig {
        minSdkVersion Config.min_sdk
        targetSdkVersion Config.target_sdk
        versionCode Config.version_code
        versionName Config.version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dependencies {

        /* ==== KOTLIN ==== */
        api Deps.kotlin_stdlib

        /* ==== COROUTINES ==== */
        api Deps.coroutines

        /* ==== ANDROID X ==== */
        api Deps.app_compat_v7
        api Deps.support_v4

        /* ==== ARCH ==== */
        api Deps.android_arch_extensions
        api Deps.android_arch_runtime

        /* ==== DAGGER ==== */
        api Deps.daggerRuntime
        api Deps.daggerAndroid
        api Deps.daggerAndroidSupport
        kapt Deps.daggerProcessor
        kapt Deps.daggerCompiler

        /* ==== RX ==== */
        api Deps.rx
        api Deps.rxAndroid

        /* ==== ARROW ==== */
        api Deps.arrow_core
        api Deps.arrow_sintax
        api Deps.arrow_typeclasses
        api Deps.arrow_data
        api Deps.arrow_instances_core
        api Deps.arrow_instances_data
        kapt Deps.arrow_annotations

        testImplementation Deps.junit
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/main.kotlin_module'
    }
}
